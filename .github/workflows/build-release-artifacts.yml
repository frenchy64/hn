name: Build Release Artifacts
on:
  push:
    branches:
    - frenchy64-experiments
  #release:
  #  types: [created]
env:
  CLOJURE_CLI_VERSION: '1.10.3.839'
  JAVA_VERSION: '14'
  ASSET_VERSION: '1.0'
jobs:
  build:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          asset_name: cljfx-hn_1.0-1_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
          jpackage_platform: linux
        - os: macos-latest
          asset_name: cljfx-hn-1.0.dmg
          asset_content_type: application/x-apple-diskimage
          jpackage_platform: mac
        #- os: windows-latest
        #  asset_name: cljfx-hn-1.0.dmg
        #  asset_content_type: application/vnd.microsoft.portable-executable
        #  jpackage_platform: windows
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - uses: DeLaGuardo/setup-clojure@12f4eac60789f0256331cd11c6072e48567953b4
        with:
          cli: ${{ env.CLOJURE_CLI_VERSION }}
      - run: clojure -M:uberjar
      - run: |
          import subprocess
          subprocess.run(['jpackage',
                          '@jpackage/common',
                          '@jpackage/'+os.environ['JPACKAGE_PLATFORM']]),
                         stdout=subprocess.PIPE)
          print(result.stdout)
        shell: python
        env:
          JPACKAGE_PLATFORM: ${{ matrix.jpackage_platform }}
      #- uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ github.event.release.upload_url }}
      #    asset_path: ${{ matrix.asset_name }}
      #    asset_name: ${{ matrix.asset_name }}
      #    asset_content_type: ${{ matrix.asset_content_type }}
