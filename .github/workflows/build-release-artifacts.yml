name: Build Release Artifacts
on:
  push:
    branches:
    - frenchy64-experiments
env:
  CLOJURE_CLI_VERSION: '1.10.3.839'
  JAVA_VERSION: '14'
jobs:
  build:
    if: "startsWith(github.event.head_commit.message, '[:release')"
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          asset_name_template: cljfx-hn_VERSION-1_amd64.deb
          jpackage_platform: linux
        - os: macos-latest
          asset_name_template: cljfx-hn-VERSION.dmg
          jpackage_platform: mac
        - os: windows-latest
          asset_name_template: cljfx-hn-VERSION.exe
          jpackage_platform: windows
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: ${{ runner.os }}-clojure-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - uses: DeLaGuardo/setup-clojure@12f4eac60789f0256331cd11c6072e48567953b4
        with:
          cli: ${{ env.CLOJURE_CLI_VERSION }}
      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.3.0
        with:
          babashka-version: 0.4.1

      # uberjar
      - run: clojure -X:uberjar
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
      - run: clojure -X:uberjar
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell

      - run: |
          # expects a message of the form [:release VERSION]
          APP_VERSION=$(bb -O '(second *input*)' <<< $COMMIT_MSG)
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV
          echo "ASSET_NAME=${ASSET_NAME_TEMPLATE/VERSION/${APP_VERSION}}" >> $GITHUB_ENV
        shell: bash
        env:
          ASSET_NAME_TEMPLATE: ${{ matrix.asset_name_template }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
      - run: jpackage @jpackage/common "@jpackage/${JPACKAGE_PLATFORM}" --app-version $APP_VERSION
        shell: bash
        env:
          JPACKAGE_PLATFORM: ${{ matrix.jpackage_platform }}
      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
